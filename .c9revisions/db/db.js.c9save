{"ts":1370057869062,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1370058200497,"patch":[[{"diffs":[[1,"\nvar mongoose = require(\"mongoose\");\n \n// 스키마\nvar Ride = new  mongoose.Schema({\n    title:String,\n    rider:String,\n    ridingDate: Date,\n    keywords: String\n});\n \n// 모델\nvar RideModel = mongoose.model('Ride', Ride);\n \n// 데이타베이스에 접속한다\nmongoose.connect(\"mongodb://lamp:lamp@ds027628.mongolab.com:27628/intnakh\");\n \n// RESTful API callback functions\nexports.readAll = function (req, res) {\n    return RideModel.find(function (err, rides) {\n        if (!err) {\n            return res.send(rides);\n        } else {\n            return console.log(err);\n        }\n    });\n};\n \nexports.create = function (req, res) {\n    var ride = new RideModel({\n        title:req.body.title,\n        rider:req.body.rider,\n        ridingDate:req.body.ridingDate,\n        keywords: req.body.keywords\n    });\n \n    ride.save(function (err) {\n        if (!err) {\n            return console.log('created');\n        } else {\n            return console.log(err);\n        }\n    });\n    return res.send(ride);\n};\n \nexports.read = function(req, res){\n    return RideModel.findById(req.params.id, function(err, ride){\n        if(!err){\n            return res.send(ride);\n        } else {\n            return console.log(err);\n        }\n    });\n};\n \nexports.update = function(req, res){\n    console.log('Updating ride ' + req.body.title);\n    return RideModel.findById(req.params.id, function(err, ride){\n        ride.title = req.body.title;\n        ride.rider = req.body.rider;\n        ride.ridingDate = req.body.ridingDate;\n        ride.keywords = req.body.keywords;\n        return ride.save(function(err){\n            if(!err){\n                console.log('ride updated');\n            } else {\n                console.log(err);\n            }\n            return res.send(ride);\n        });\n    });\n};\n \nexports.delete = function(req, res){\n    console.log('Deleting ride with id: ' + req.params.id);\n    return RideModel.findById(req.params.id, function(err, ride){\n        return ride.remove(function(err){\n            if(!err){\n                console.log('Ride removed');\n                return res.send('');\n            } else {\n                console.log(err);\n            }\n        });\n    });\n};"]],"start1":0,"start2":0,"length1":0,"length2":2171}]],"length":2171,"saved":false}
{"ts":1370059031805,"patch":[[{"diffs":[[0,"   }\n    });\n};\n"],[-1," "],[1,"\nexports.createRider = function(req, res) {\n  var ride = new RideModel({\n        title:'1',\n        rider:'rider1',\n        ridingDate: new Date(),\n        keywords: 'keyword'\n    });\n \n    ride.save(function (err) {\n        if (!err) {\n            return console.log('created');\n        } else {\n            return console.log(err);\n        }\n    });\n    return res.send(ride);\n};\n"],[0,"\nexports.create "]],"start1":553,"start2":553,"length1":33,"length2":414}]],"length":2552,"saved":false}
